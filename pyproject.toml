[tool.poetry]
name = "pycmtensor"
version = "1.3.2"
description = "Python Tensor based package for discrete choice modelling."
authors = ["Melvin Wong <m.j.w.wong@tue.nl>"]
license = "MIT License"
readme = "README.md"

homepage = ""
repository = "https://github.com/mwong009/pycmtensor"
documentation = ""

keywords = []

classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.9",
]

[tool.poetry.dependencies]
# Core
python = "~3.11"
aesara = "~2.9"
numpy = "^1.21.2"
scipy = "^1.7.1"
pandas = "^1.4.1"
pydot = "^1.4.2"
dill = "^0.3.4"
watermark = "^2.3.1"

# Formatters
black = { version = "^23.3.0", optional = true } 
isort = { version = "^5.9.1", optional = true } 

#Linters
pydocstyle = { version = "^6.1.1", optional = true } 
rstcheck = { version = "^6.1.2", optional = true } 

# Documentation
Sphinx = { version = "^5.3.0", optional = true } 
sphinx-book-theme = { version = "^1.0.1", optional = true } 
sphinx-design = {version = "^0.4.1", optional = true}
sphinx-autoapi = { version = "^2.1.1", optional = true } 
myst-nb = {version = "^0.17.2", optional = true}

# Tooling
pre-commit = { version = "^3.3.3", optional = true } 
commitizen = { version = "^3.3.0", optional = true } 

[tool.poetry.dev-dependencies]
# Testing
pytest = "^7.0"
pytest-cov = "^4.1.0"

[tool.poetry.extras]
lint = ["black", "isort", "pydocstyle", "rstcheck"]
commit = ["commitizen", "pre-commit"]
docs = ["Sphinx", "sphinx-book-theme", "sphinx-autoapi", "myst-nb", "sphinx-design"]
dev = ["black", "isort", "pydocstyle", "rstcheck", "Sphinx", "sphinx-book-theme", "sphinx-design", "sphinx-autoapi", "myst-nb", "commitizen", "pre-commit"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"
skip_glob = ".pytest_cache/*"

[tool.black]
line-length = 88
target-version = ["py311"]
quiet = false

[tool.commitizen]
name = "cz_conventional_commits"
version = "1.3.2"
tag_format = "v$version"
version_files = [
    "pyproject.toml:version",
    "pycmtensor/__init__.py",
    "docs/conf.py",
    "docs/index.md",
    "README.md"
]

[tool.pytest]
markers = []
# command: 
# poetry run pytest .

[tool.pytest.ini_options]
addopts = [
    "--cov=pycmtensor",
    "--cov-report=xml",
    # "--ignore-glob=*performance.py",
]

filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
omit = [".*", "*/site-packages/*", "tests/*", "docs/*", "samples/*"]
# command:
# poetry run coverage run -m pytest && poetry run coverage report