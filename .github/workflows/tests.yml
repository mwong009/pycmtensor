name: Tests
on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
      - "**-beta"

jobs:
  build-install-test:
    strategy:
      matrix:
        os: ["windows-latest", "ubuntu-latest", "macos-latest"]
        python-version: ["3.11"]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    
    #########
    # Setup #
    #########
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Display Python version and OS
      run: |
        python --version
        python -c "import sys; print(sys.platform)"
    
    - name: Add conda to path (Bash)
      run: |
        echo "$CONDA/condabin" >> $GITHUB_PATH
        echo "$CONDA/Library/bin" >> $GITHUB_PATH
        echo "CONDA_PREFIX=$CONDA" >> $GITHUB_ENV
      shell: bash

    ###########
    # Windows #
    ###########
    - name: Install Conda dependencies (windows)
      if: matrix.os == 'windows-latest'
      run: |
        conda install -c conda-forge aesara -y

    ##################
    # Linux (Ubuntu) #
    ##################
    - name: Install conda dependencies (linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        conda install -c conda-forge aesara -y

    ###########
    # Mac OSX #
    ###########
    - name: Install conda dependencies (macos)
      if: matrix.os == 'macos-latest'
      run: |
        conda install -c conda-forge aesara -y
    
    - name: Xcode check (macos)
      if: matrix.os == 'macos-latest'
      run: |
        clang --version
        xcrun --show-sdk-path
    
    ##################
    # Install Poetry #
    ##################
    - name: Install package dependencies
      run: |
        pip install poetry
        poetry install --with test
        poetry run python -c "import pycmtensor as cmt; print(cmt.__version__)"

    - name: Show contents of .aesararc
      run: |
        cat ~/.aesararc
      shell: bash

    - name: Show aesara.config ldflags
      run: |
        poetry run python -c "import aesara; print(aesara.config.blas__ldflags)"
        poetry run python -c "import aesara; print(aesara.config.gcc__cxxflags)"
    
    ########
    # Test #
    ########
    - name: Test with pytest
      run: |
        poetry run pytest
      
    - name: Upload coverage to codecov.io
      if: |
        (matrix.os == 'windows-latest') &&
        (matrix.python-version == '3.11')
      uses: codecov/codecov-action@v2
      with:
        files: coverage.xml