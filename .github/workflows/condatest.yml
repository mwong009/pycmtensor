name: CondaTest
on:
  workflow_dispatch:

jobs:
  example:
    name: (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -el {0}
    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest"]
        python-version: ["3.11"]
    steps:
      - name: Set up Python
        uses: actions/checkout@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          auto-activate-base: false
          environment-file: environment.yml
          python-version: ${{ matrix.python-version }}
      
      - name: Xcode check (macos)
        if: matrix.os == 'macos-latest'
        run: |
          clang -- version
          xcrun --show-sdk-path
      
      - name: Display Conda packages
        run: |
          conda info
          conda list

      - name: Test pycmtensor import
        run: |
          python -c "import pycmtensor as cmt; print(cmt.__version__)"
          cat ~/.aesararc

      - name: Show Aesara config
        run: |
          python -c "import aesara; print(aesara.config.blas__ldflags)"
          python -c "import aesara; print(aesara.config.gcc__cxxflags)"

      - name: Main test
        run: pytest

      - name: Upload coverage to codecov.io
        if: (matrix.os == 'ubuntu-latest') && (matrix.python-version == '3.11')
        uses: codecov/codecov-action@v2
        with:
          files: coverage.xml
